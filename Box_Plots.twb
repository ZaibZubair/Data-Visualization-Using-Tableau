<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (salary_data_states_corrected (1))' inline='true' name='federated.1izngah1lfvdlv1e3q5d119oudih' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='salary_data_states_corrected (1)' name='excel-direct.1m73q4j17g3qyx1djlva71w7116o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/maalick/Desktop/tableu/week3/salary_data_states_corrected (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1m73q4j17g3qyx1djlva71w7116o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='integer' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='integer' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_NUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_STATUS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_STATUS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_RECEIVED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CASE_RECEIVED_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_RECEIVED_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECISION_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DECISION_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DECISION_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYER_NAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EMPLOYER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_CITY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EDUCATION_LEVEL_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EDUCATION_LEVEL_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EDUCATION_LEVEL_REQUIRED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COLLEGE_MAJOR_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COLLEGE_MAJOR_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COLLEGE_MAJOR_REQUIRED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_Y_N</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_NUM_MONTHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OF_CITIZENSHIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OF_CITIZENSHIP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COUNTRY_OF_CITIZENSHIP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_CODE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_TITLE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE_ABBREVIATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE_ABBREVIATION]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE_ABBREVIATION</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_POSTAL_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_POSTAL_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_POSTAL_CODE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TIME_POSITION_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_TIME_POSITION_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FULL_TIME_POSITION_Y_N</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISA_CLASS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VISA_CLASS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>VISA_CLASS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_PER_YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_PER_YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE_SUBGROUP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE_SUBGROUP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE_SUBGROUP</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>order</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[CASE_NUMBER (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CASE_NUMBER]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;I-200-13077-839340, I-200-13081-043757, I-200-13081-136705 and 2 more&quot;'>
            <value>&quot;I-200-13077-839340&quot;</value>
            <value>&quot;I-200-13081-043757&quot;</value>
            <value>&quot;I-200-13081-136705&quot;</value>
            <value>&quot;I-200-13087-022976&quot;</value>
            <value>&quot;I-203-14021-228428&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
      <column datatype='string' name='[COUNTRY_OF_CITIZENSHIP]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Rank' datatype='integer' name='[Calculation_426716099236454400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='States We Are Interested In' datatype='string' name='[Calculation_426716099237670913]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [WORK_STATE] WHEN &apos;California&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Washington&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Texas&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Alabama&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Maine&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Massachusetts&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;North Carolina&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New York&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Colorado&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Newhampshire&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &apos;Don&apos;&apos;t View&apos;&#13;&#10;END' />
      </column>
      <column caption='Difference Between Prevailing And Paid Wage Per Year' datatype='real' name='[Calculation_426716099261915138]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR]-[PREVAILING_WAGE_PER_YEAR]' />
      </column>
      <column caption='Paying Less Than Prevailing Wage' datatype='string' name='[Calculation_426716099263213571]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_426716099261915138] &lt; 0&#13;&#10;THEN &apos;Paid Less Than Prevailing Wage&apos;&#13;&#10;ELSE &apos;Paid Prevailing Wage or Higher&apos;&#13;&#10;END' />
      </column>
      <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_426716099276242948]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.0gjsd9m1wvfqrv1eucl2002wnwti].[Price Parity]))*100' />
      </column>
      <column caption='In Top X?' datatype='boolean' name='[Calculation_426716099287183369]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_426716099276242948])&lt;=[Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
      <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column aggregation='Median' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column datatype='string' name='[WORK_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[WORK_STATE (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Alabama&quot;'>
            <value>&quot;AL&quot;</value>
            <value>&quot;ALABAMA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;California&quot;'>
            <value>&quot;CA&quot;</value>
            <value>&quot;CALIFORNIA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Colorado&quot;'>
            <value>&quot;CO&quot;</value>
            <value>&quot;COLORADO&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Maine&quot;'>
            <value>&quot;MAINE&quot;</value>
            <value>&quot;ME&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Massachusetts&quot;'>
            <value>&quot;MA&quot;</value>
            <value>&quot;MASSACHUSETTS&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New Hampshire&quot;'>
            <value>&quot;NEW HAMPSHIRE&quot;</value>
            <value>&quot;NH&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New York&quot;'>
            <value>&quot;NEW YORK&quot;</value>
            <value>&quot;NY&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Carolina&quot;'>
            <value>&quot;NC&quot;</value>
            <value>&quot;NORTH CAROLINA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Texas&quot;'>
            <value>&quot;TEXAS&quot;</value>
            <value>&quot;TX&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Washington&quot;'>
            <value>&quot;WA&quot;</value>
            <value>&quot;WASHINGTON&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[WORK_STATE_ABBREVIATION]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[diff:usr:Calculation_426716099276242948:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]' />
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[usr:Calculation_426716099276242948:qk]' pivot='key' type='quantitative' />
      <group caption='Action (JOB_TITLE_SUBGROUP,WORK_STATE)' hidden='true' name='[Action (JOB_TITLE_SUBGROUP,WORK_STATE)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
          <groupfilter function='level-members' level='[WORK_STATE]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.633867' measure-ordering='alphabetic' measure-percentage='0.313501' parameter-percentage='0.0526316' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[CASE_NUMBER (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;I-200-13077-839340, I-200-13081-043757, I-200-13081-136705 and 2 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[diff:usr:Calculation_426716099276242948:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099276242948:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:JOB_TITLE_SUBGROUP:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;assistant professor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;data analyst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;software engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;business analyst&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;management consultant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;attorney&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;teacher&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Finland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0gjsd9m1wvfqrv1eucl2002wnwti'>
        <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (price_parity)' inline='true' name='federated.0gjsd9m1wvfqrv1eucl2002wnwti' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='price_parity' name='excel-direct.0mgygax1atx51o19i2rpx1pwzb5i'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/maalick/Desktop/tableu/week3/price_parity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0mgygax1atx51o19i2rpx1pwzb5i' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Parity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Parity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price Parity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B52:no:A1:B52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.30206' measure-ordering='alphabetic' measure-percentage='0.441648' parameter-percentage='0.256293' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Finland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0gjsd9m1wvfqrv1eucl2002wnwti'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
      <column datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0gjsd9m1wvfqrv1eucl2002wnwti' target='federated.1izngah1lfvdlv1e3q5d119oudih'>
      <column-mapping>
        <map key='[federated.0gjsd9m1wvfqrv1eucl2002wnwti].[none:State:nk]' value='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <actions>
    <action caption='top states' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Top States and Companies for Data Jobs' type='sheet' worksheet='Top States for Data Jobs' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Top States for Data Jobs' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Top States and Companies for Data Jobs' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Best Fit Lines Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Max' name='[max:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Min' name='[min:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year-Trunc' name='[tyr:CASE_RECEIVED_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1izngah1lfvdlv1e3q5d119oudih].[min:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1izngah1lfvdlv1e3q5d119oudih].[max:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk] + ([federated.1izngah1lfvdlv1e3q5d119oudih].[max:PAID_WAGE_PER_YEAR:qk] + [federated.1izngah1lfvdlv1e3q5d119oudih].[min:PAID_WAGE_PER_YEAR:qk]))</rows>
        <cols>[federated.1izngah1lfvdlv1e3q5d119oudih].[tyr:CASE_RECEIVED_DATE:qk]</cols>
      </table>
      <simple-id uuid='{178BA5E2-CF1B-4BF5-AE87-AA0A39B52723}' />
    </worksheet>
    <worksheet name='Box Plots'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year' name='[yr:CASE_RECEIVED_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]' field-type='quantitative' max='300000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[federated.1izngah1lfvdlv1e3q5d119oudih].[yr:CASE_RECEIVED_DATE:ok]</cols>
      </table>
      <simple-id uuid='{2FBE5C8E-635F-4E60-B938-7F716939C5BA}' />
    </worksheet>
    <worksheet name='Checking for Outliers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column datatype='string' name='[CASE_NUMBER (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CASE_NUMBER]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;I-200-13077-839340, I-200-13081-043757, I-200-13081-136705 and 2 more&quot;'>
                  <value>&quot;I-200-13077-839340&quot;</value>
                  <value>&quot;I-200-13081-043757&quot;</value>
                  <value>&quot;I-200-13081-136705&quot;</value>
                  <value>&quot;I-200-13087-022976&quot;</value>
                  <value>&quot;I-203-14021-228428&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;attorney&quot;' function='range' level='[none:JOB_TITLE_SUBGROUP:nk]' to='&quot;data scientist&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[federated.1izngah1lfvdlv1e3q5d119oudih].[CASE_NUMBER (group)]</cols>
      </table>
      <simple-id uuid='{AEC9B10F-F9E2-4836-97C4-DC47F7073523}' />
    </worksheet>
    <worksheet name='Companies That Pay Below Prevailing Wage Per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column caption='Difference Between Prevailing And Paid Wage Per Year' datatype='real' name='[Calculation_426716099261915138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR]-[PREVAILING_WAGE_PER_YEAR]' />
            </column>
            <column caption='Paying Less Than Prevailing Wage' datatype='string' name='[Calculation_426716099263213571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_426716099261915138] &lt; 0&#13;&#10;THEN &apos;Paid Less Than Prevailing Wage&apos;&#13;&#10;ELSE &apos;Paid Prevailing Wage or Higher&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='Median' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_426716099261915138]' derivation='Count' name='[cnt:Calculation_426716099261915138:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_426716099263213571]' derivation='None' name='[none:Calculation_426716099263213571:nk]' pivot='key' type='nominal' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Calculation_426716099261915138:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099263213571:nk]'>
            <groupfilter function='member' level='[none:Calculation_426716099263213571:nk]' member='&quot;Paid Less Than Prevailing Wage&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;assistant professor&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099263213571:nk]</column>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Calculation_426716099261915138:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Calculation_426716099261915138:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Calculation_426716099261915138:qk]' />
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Calculation_426716099261915138:qk]' />
              <text column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
              <text column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5B20E8A1-5BC1-4682-9A43-29A9DAB9E1AA}' />
    </worksheet>
    <worksheet name='Jobs by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column datatype='string' name='[WORK_STATE (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Alabama&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;ALABAMA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;California&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;CALIFORNIA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;COLORADO&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Maine&quot;'>
                  <value>&quot;MAINE&quot;</value>
                  <value>&quot;ME&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;MASSACHUSETTS&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New Hampshire&quot;'>
                  <value>&quot;NEW HAMPSHIRE&quot;</value>
                  <value>&quot;NH&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;NEW YORK&quot;</value>
                  <value>&quot;NY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;NORTH CAROLINA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;TEXAS&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;WA&quot;</value>
                  <value>&quot;WASHINGTON&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[WORK_STATE (group)]' to='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[WORK_STATE (group)]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[WORK_STATE (group)]' member='&quot;Washington&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk] / [federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE (group)])</cols>
      </table>
      <simple-id uuid='{CFDEDC2A-A0BA-437E-804A-A826711B7D80}' />
    </worksheet>
    <worksheet name='Median Wage Per  Subgroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</cols>
      </table>
      <simple-id uuid='{08622B4C-7B71-41E1-A995-8E2B263A42BF}' />
    </worksheet>
    <worksheet name='Salaries Adjusted For Cost Of Living'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
            <datasource caption='Sheet1 (price_parity)' name='federated.0gjsd9m1wvfqrv1eucl2002wnwti' />
          </datasources>
          <datasource-dependencies datasource='federated.0gjsd9m1wvfqrv1eucl2002wnwti'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column caption='States We Are Interested In' datatype='string' name='[Calculation_426716099237670913]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [WORK_STATE] WHEN &apos;California&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Washington&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Texas&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Alabama&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Maine&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Massachusetts&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;North Carolina&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;New York&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Colorado&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;WHEN &apos;Newhampshire&apos;&#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &apos;Don&apos;&apos;t View&apos;&#13;&#10;END' />
            </column>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_426716099276242948]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.0gjsd9m1wvfqrv1eucl2002wnwti].[Price Parity]))*100' />
            </column>
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[diff:usr:Calculation_426716099276242948:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_426716099237670913]' derivation='None' name='[none:Calculation_426716099237670913:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[diff:usr:Calculation_426716099276242948:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099237670913:nk]'>
            <groupfilter function='member' level='[none:Calculation_426716099237670913:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099237670913:nk]</column>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]' />
              <size column='[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[Multiple Values]</rows>
        <cols>([federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk] / [federated.0gjsd9m1wvfqrv1eucl2002wnwti].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{31F16A53-4586-4B35-961A-C9AD37DBE5B4}' />
    </worksheet>
    <worksheet name='Top Companies For Data Jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (price_parity)' name='federated.0gjsd9m1wvfqrv1eucl2002wnwti' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gjsd9m1wvfqrv1eucl2002wnwti'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_426716099276242948]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.0gjsd9m1wvfqrv1eucl2002wnwti].[Price Parity]))*100' />
            </column>
            <column caption='In Top X?' datatype='boolean' name='[Calculation_426716099287183369]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_426716099276242948])&lt;=[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:ok:8]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[usr:Calculation_426716099276242948:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_426716099287183369]' derivation='User' name='[usr:Calculation_426716099287183369:nk:5]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;business analyst&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data analyst&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data scientist&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk:5]'>
            <groupfilter function='member' level='[usr:Calculation_426716099287183369:nk:5]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk:5]</column>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:ok:8]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk] / ([federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:ok:8] / [federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk])))</rows>
        <cols>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099276242948:qk]</cols>
      </table>
      <simple-id uuid='{A4DE1CBC-556A-49B1-AD8F-8CD3437EC082}' />
    </worksheet>
    <worksheet name='Top States for Data Jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (price_parity)' name='federated.0gjsd9m1wvfqrv1eucl2002wnwti' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gjsd9m1wvfqrv1eucl2002wnwti'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_426716099276242948]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.0gjsd9m1wvfqrv1eucl2002wnwti].[Price Parity]))*100' />
            </column>
            <column caption='In Top X?' datatype='boolean' name='[Calculation_426716099287183369]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_426716099276242948])&lt;=[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[rank:usr:Calculation_426716099276242948:ok:4]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_426716099276242948]' derivation='User' name='[usr:Calculation_426716099276242948:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_426716099287183369]' derivation='User' name='[usr:Calculation_426716099287183369:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;business analyst&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data analyst&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data scientist&quot;' />
              <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk:2]'>
            <groupfilter function='member' level='[usr:Calculation_426716099287183369:nk:2]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:ok:4]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099276242948:qk]</rows>
        <cols>([federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:ok:4] / [federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]))</cols>
      </table>
      <simple-id uuid='{633F36A5-9FA3-413E-A413-E0D15ED7C5D7}' />
    </worksheet>
    <worksheet name='Visa Class Does Not Have Strong Relationship with Salary '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
          </datasources>
          <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
            <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Median' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[VISA_CLASS]' derivation='None' name='[none:VISA_CLASS:nk]' pivot='key' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Stdev' name='[std:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1izngah1lfvdlv1e3q5d119oudih].[sum:Number of Records:qk]' />
              <lod column='[federated.1izngah1lfvdlv1e3q5d119oudih].[std:PAID_WAGE_PER_YEAR:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1izngah1lfvdlv1e3q5d119oudih].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.1izngah1lfvdlv1e3q5d119oudih].[none:VISA_CLASS:nk] / [federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk])</cols>
      </table>
      <simple-id uuid='{B52A089A-7E23-4BBB-BCE4-C62D0AB30761}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Top States and Companies for Data Jobs'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet1 (salary_data_states_corrected (1))' name='federated.1izngah1lfvdlv1e3q5d119oudih' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1izngah1lfvdlv1e3q5d119oudih'>
        <column datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
        <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='48667' id='9' param='horz' type='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='48667' id='5' param='vert' type='layout-flow' w='77995' x='1000' y='1333'>
              <zone h='48667' id='7' name='Top States for Data Jobs' w='77995' x='1000' y='1333'>
                <layout-cache minheight='244' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='48667' id='8' is-fixed='true' param='vert' type='layout-flow' w='20000' x='78995' y='1333'>
              <zone h='8666' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='20000' x='78995' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33833' id='13' name='Top Companies For Data Jobs' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' w='20000' x='78995' y='9999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48667' id='12' name='Top Companies For Data Jobs' w='98000' x='1000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='30' param='vert' type='layout-flow' w='98000' x='1000' y='1333'>
                <zone fixed-size='280' h='48667' id='7' is-fixed='true' name='Top States for Data Jobs' w='77995' x='1000' y='1333'>
                  <layout-cache minheight='244' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8666' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='20000' x='78995' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='33833' id='13' mode='checkdropdown' name='Top Companies For Data Jobs' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' w='20000' x='78995' y='9999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48667' id='12' is-fixed='true' name='Top Companies For Data Jobs' w='98000' x='1000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C739B30E-6794-4A5B-8F05-1105050ED482}' />
    </dashboard>
    <dashboard name='Which States can be best for Data Jobs?' type='storyboard'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='1' param='vert' removable='false' type='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='5500' id='3' type='title' w='98000' x='1000' y='1333' />
            <zone h='16833' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98000' x='1000' y='6833' />
            <zone h='75001' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98000' x='1000' y='23666'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='I took into consideration whether visa class would affect my salary' captured-sheet='Visa Class Does Not Have Strong Relationship with Salary ' id='2' />
                  <story-point caption='I also looked at whether my salary would likely to increase in the future' captured-sheet='Best Fit Lines Over Time' id='3'>
                    <capturedDeltas>
                      <worksheet name='Best Fit Lines Over Time'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='At first, I thought I might move to California as paid wage per year were high there.' captured-sheet='Jobs by State' id='4' />
                  <story-point caption='But now I want to move Wyoming as adjusted paid wage are good with more companies options.' captured-sheet='Top States and Companies for Data Jobs' id='7'>
                    <currentDeltas>
                      <worksheet name='Top Companies For Data Jobs'>
                        <filter class='categorical' column='[federated.1izngah1lfvdlv1e3q5d119oudih].[Action (JOB_TITLE_SUBGROUP,WORK_STATE)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
                            <groupfilter function='level-members' level='[WORK_STATE]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{C1241CB5-4CD5-44AC-ADED-8576A1B1EC71}' />
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='Median Wage Per  Subgroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1169B494-5AFD-483E-B17F-816E4937D8BD}' />
    </window>
    <window class='worksheet' name='Visa Class Does Not Have Strong Relationship with Salary '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:VISA_CLASS:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6389032A-B834-48FB-9E5E-3381FD734D58}' />
    </window>
    <window class='worksheet' name='Checking for Outliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[CASE_NUMBER (group)]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AC4B1FB1-F6B9-4939-9D93-885DC74965EB}' />
    </window>
    <window class='worksheet' name='Jobs by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[WORK_STATE (group)]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1E9F4C00-B0E0-4E92-AAE1-B570BDB4B2F6}' />
    </window>
    <window class='worksheet' name='Best Fit Lines Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{086F06F6-D135-4773-B076-FBCD2DF4BF62}' />
    </window>
    <window class='worksheet' maximized='true' name='Box Plots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{330A0D36-A8D3-4ADF-9C3B-50A305FA88A1}' />
    </window>
    <window class='worksheet' name='Companies That Pay Below Prevailing Wage Per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099263213571:nk]' type='filter' />
            <card param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[cnt:Calculation_426716099261915138:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099263213571:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{69975F0A-7ED7-4FC4-9288-0D38FABB1615}' />
    </window>
    <window class='worksheet' name='Salaries Adjusted For Cost Of Living'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]' type='size' />
            <card pane-specification-id='1' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gjsd9m1wvfqrv1eucl2002wnwti].[none:State:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[:Measure Names]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099237670913:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FEB2674-25F3-40CF-821D-E140374DC834}' />
    </window>
    <window class='worksheet' name='Top States for Data Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099237670913:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:ok:2]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk:2]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0163576-95F6-40BE-B795-04640E9A7B7D}' />
    </window>
    <window class='worksheet' name='Top Companies For Data Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:Calculation_426716099237670913:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[none:WORK_STATE:nk]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[rank:usr:Calculation_426716099276242948:ok:8]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk:5]</field>
            <field>[federated.1izngah1lfvdlv1e3q5d119oudih].[usr:Calculation_426716099287183369:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21F091F1-925C-4C98-BA07-DBFA41DC92BE}' />
    </window>
    <window class='dashboard' name='Top States and Companies for Data Jobs'>
      <viewpoints>
        <viewpoint name='Top Companies For Data Jobs' />
        <viewpoint name='Top States for Data Jobs'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C3F868E5-0C87-42B7-99E8-079CD0DD5C61}' />
    </window>
    <window class='dashboard' name='Which States can be best for Data Jobs?'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{21E2B65E-D548-49F4-A486-50582218EADC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Best Fit Lines Over Time' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Box Plots' width='192'>
      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
      JQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Checking for Outliers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Companies That Pay Below Prevailing Wage Per Year' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Jobs by State' width='192'>
      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
      brsJWziQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Median Wage Per  Subgroup' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salaries Adjusted For Cost Of Living' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='179' name='Top Companies For Data Jobs' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACzCAYAAADfahNoAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPhElEQVR4nO3df1xUdb7H8VedRIjCYNGrmKYVK45pQxDkDwyzMNQuLOuWWd7rjXLEH+va
      w+qxtktXHuVm7k3LH4gxW4+y0rq6eksmfeRqaWHYyKCG8kCFpARNQVSacfB47h8z/BCdKEn5
      8f08/5vv+Z7hHJg35/s9cz7nXGMYhoEQirq2tTdAiNYkARBKkwAIpUkAhNIkAEJpEgChNAmA
      UJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQA
      QmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpV3XXIevv/76amyHEK3iGrk5rlCZDIGE0iQAQmkS
      AKG0FgSgApvVRsWvty3KcVgtWGatpFBvssD1FcumWrBYHa2yXSpp9izQ1VRhy2AFk0lP7N7a
      m3KVxJCcUMGuIh2TSatvdRXYcQ+7l57Ohp4OqwV7VBap5lbYzAtUYMtYAZPTae0/k8NqITPv
      wraYtCxSw3NZ8tpJxs1JpH4Ta+ysyCxn7KyxhO2xYqlb0bhs5UZOdo5RfvlvoLz87GwjvzzH
      WPDON8a5+lansWPpQmPLvhxjbnZ+K25d25efnW34+g2d2LLQWLjlhPeV09j95kLjo+/PXdSv
      ZUcA50E+Wfo89t3H0QN6MXjiFCZEhaLhwJpRzpj0ugRWYMvYQI/0VMzoHNm6nKVrdnPcrRHQ
      LZrHZz9BdBfPEWBDj3TPf7kKGys26nQ58RW5B47h1EIZljqHieZAQOe4/T2Wv5NLmVPjxn73
      M8WSxO2BoB/ZyvKla9h93I0W0I3ox2fzRHQXn+2trnskAyo+pUg3YdIAVwF2t5nHbnLyeaNu
      DmsG5WM8/3VrClezcMVnlDl1/G7sw4N//DNjevved6jhgO0t3szZzXG3H6GDRvNfkxK5PbDJ
      79zzg8goH+M5ClfYsOZHMv6Wz1i44jPOj0onPZFGf8u2KyR+PKb5q8i9eyoxZWvJCUpidph2
      Ub8WDoE6E5HyVyZO8+d8lYPVf7eyte9zjAz5qXUK2fR5D556dRp9Oum4ThzjTOdL9zz13SlM
      jz7NgluDoWw9f9tUDGYzVG7lk0PRTFswkeBOOq7Sj1myfj+zJ0RQuOlzejz1KtP6dEJ3neCY
      9819tbe+7sRGVpHjHQa5CuwQ+wRd2OKj/w98kVPF/RmLuSdIo7bmO6rcniW+9tHlWMXbJXcy
      fcEUenSqpTz3H2SucjDnZ4yn9LINWIvDeDhjMb8N0qDdzPq6M3JibxavWs/B45A0uy8Xf/z1
      FgYg4Gb69PBHA7RgM+PGbufdw8BPBiCcqN4rWZRRyoA7+mO+Zyh3/ebSPYPvuo9htwZ7XvS6
      hZ7e9urd+Wz79AO2fdqoc08/KoggPKo3KxdlUDrgDvqb72Go9819tbcFIZEmqnKK0E392L8X
      Ih/zh5O+endl0KBKXs54BfvA/vSPHUJchGeJr30sdnxPTHIqPfwBNHoMSybmX5soxkzXZrbt
      lLsfk6YNI/TiT08bkEem5cJJQExawzxJCxvFiGtms/Hu/ybiEtuv71/9606Cf/yxBgKa6+XP
      wEnzeLm8mL2HSih8/yV2jpjL1Fj/n/1z3G43UZOXMTnqEns1cBLzXi6neO8hSgrf56WdI5g7
      NRZ/X+2/aA+vkJBITFU5FNW6sZ+N5LFmNqp7whwW3H2IfQdLObRxCS8WPcncpN4+97Elgm+7
      vY1++AFiSMvyPRTTj2xki3EfYTvXs2fIJAY2/r269vDepuAWfg+gO3HVAui4Sjfz9mehREUA
      aGjuak7VArU1fLfzE3Lrj5wV7CsoRw+NIHpoAsmJJqg+/Yt+bNeIARxe+z6OqlrPZrhOsM++
      n2qgYl8B5XooEdFDSUhOxEQ1p3+ivW0IIdJUxc7VeZyNjGwmlNWU7D3EqYBbGBR9H2MeHUJQ
      VTXgex/DzT3JW7edcpcOuovy7evI62kmHNC06zhTfQodHdeJfdi27rvyu3s16EewfXCU+PFJ
      PJrkx9q1+2k42+xiz4dbCB2X0LIjwA3XFmF9ZirHnBDQbQAPTZ6M2R/ARMLwjbwy04JTC6Xf
      sMHc1u2od63OnN39Ji9kl3LarREQPorpac0diJvoPZapDywnc+5MMr0TwTvHjudx4PzZ3bz5
      Qjalp91oAeGMmp5GV6DKR3tbERJpomJNEfHjmjsmdYYjNhZlf8Mxp45faAwTZj3gWeJrH83j
      +Y/yt1jyzDuNJsFm/AH/oaMJmfc8U9/TCeh1Fw/163WF9/TqqNj8AUfjnmJsIBCRQsqO+aze
      /xcmRGjUOFaxJXQc08I0uRhOtF++vgeY1M3G39fdxPSpgwmsW1BjZ8Vr3/LAc3EUz/8La771
      NEsAhNLkWiChNAmAUJoEQChNAiCU1qauBhWiqStdky5ngYTS2tgQyIE1Q4psxNXTxgLQcg6r
      FamjEj9XhwuAEL9ECybB1ex+dxlv7yjltBv8Qgfx+2lTiA/TAAfW14rpE3gAW0Epp/UAwpOf
      ZVZCGBqH+fTVN/j4wDGcukZAr3uZPOsRTIEXvrtespbF+ZHMSKm7jluncOUyykfPYGTnQlYv
      XMFnZU50vxvp8+Af+fOYSqyWTPIA8jzfj/dMnqtQeaW4LJdfkOY0vi8tM864Pa/clZuNxW/u
      ritWM7LnLDVyHEcM5znDOFedZ2QtqCufrDQOHzxuOM8ZhmGcM5yF7xtLNx5rWG9uXb8TxqcL
      lho7nHU/boexfPkOw2kYxrGNC4zM3GpPGaH7jFF2tLJ+q36qTE50RCeNLQunG9OXfmk4G7We
      O7TGeCk7/8K27z8yFmR9bZwxDMPIzzYmT57ckpLITvD9J7y+uIDS096SpJ7JVDDQUwZ56xAS
      7+zhaQ/qRa/g4971/Di9O4sVrx/gmNN7gWpMBFx0bWYI8aODWPZFJbEjQ6jeYScwzuK5gnHQ
      ICpfzuAV+0D6949lSF1FiFBPdT6F3VKZcPJLClyDqSsr0fomkRLwImv3D2RChKeSbfMHRxnx
      1Nj6C+Ri0rJaMAf4YTMf7Apn0ouLyMrKIisrjZifs96eD1lXm8jTC5Z51pubXF/p1ZRmGk7v
      r3Io1Cv5ek8Qd/XzVmZ0T2DOgud5JG4AQac2suTF9Ry+7B0R7Vl1voPOpoFERoK9wNVoiUZE
      Sgru9esp0aFy6yoOxI4nqslQ+/IDUOvmmtBuBHfS0F0nOLTdzqGfsZrudhP4m+7c0Alqa76j
      4MtvqPLZuzdxQ46zbc0m9vQeTt2dQ6pL9nLoVAC3DIrmvjGPMiSoiur6dUooPlAL6NTWNr3h
      juhYXBQW+nFHhIa/yYR7b+OiF8B/IH+4v4r169eyymFm/ODAi97h8odAYSO4t3Yez0z13hHi
      sWh60fx3app5LP0XzmXmaida6CBGJ9xMF98JICQugcDZH3H7X8fXt3XmCLZF2XxzzInuF0rM
      hFk84F0WMdTMx0tmYnFqhI9PZ/aItlT2In5Vrnzs5yN50h/wj6Df0Q3s0c2YG5VwBkY9RITt
      JY7//rWLStXzMi1t/5vg2rKPeTWnKzMtbaR+V7QZrtwlLDk7kdnxntvbVNjmsaHHc6Q2SkCN
      3cob3wbjV3wDKc8lNNwoy2HFSmpbvhaoAlvGC+ScHUbqnLHy4RdNuCjIL6S44Fks7ze0Xh9X
      hG42eU6d19hZtS2Mh2ck4r9tEW9vjeZP8RceB9pwALqTmJ5FYmtvhmibXAXYj47i+awkete1
      6YWsTN/lvcmYiz0fbuPfHp5BmAbEj8c0/222DvoTjTMg3wSLdknfv5cfh8c1fPgBNBPDYw6z
      q0inxvEuOUFJJNbfDa47Iyfezpfv5VLjbWkXcwAhriQ5AgilSQCE0iQAQmkSAKG0NnwaVAip
      CRbiipIhkFCaBEAoTQIglCYBEEqTAIj2r8KG1dbkblLVW1k0YwbLchtXiek4rPNo3FUCIDqk
      6vxCuqVOgPwCGiKgEWEK4mBJQ4sEQHRA1eQ7OmMaGEkkdhqXCvv3vQ1XSWn9awmA6HhchRT6
      3UGE5o/J5Gbv/kaVwt37ElZ2gCMA/CABEB2Ni9zsLzA95imh7RI/nrCct3DUZyCCMbEHsDl0
      2LNBLoUQHcDJqoY7i7gKyC8spuBZCw2VktcTV6Rj9t5WpMstvTmRf5gSzkgARPvkOnUKLSiI
      a12l2NYW0OsPEzztBXaOjnqerKSGWjG9cCXpu4rQTd5a4b4mbl6/ne1+YTIEEu3TafsKnrZY
      mPrMG3w7ZCbjwgF09u/9keFxFxRKopmGE3N4F0X1w6A+9L1uO7mdb5WL4YTa5AgglCYBEEqT
      AAilSQCE0uQ0qGjTpCRSiCtIhkBCaRIAoTQJgFCaBEAoTQIg2qkKbBlWHE1bbdaGkkeHFYtl
      Ppsrfa8nARAdWtSocL76pwOXj+USANGhabeOZuTZf7LRx3N0JQCig/MnNuUevvm/hifDNCYB
      EB1f9wSSb9rCxpKLnxstARAK0DCNHsLh9duobLJEAiDaqQACrnfivGB266Lk4FE07RLdQ+J4
      sNu/yCk8f0GzBEC0U10YFO1i3T+2U+7SgVqqdr7LmppYorteqr9GRFIiJ9fZvLdE8ZCrQUW7
      FRKfxn8efZ3/eeYdTrs1AnoNZuKUeEJ8rRA4mH8fsIGXcvoS5W2Sq0GF0mQIJJQmARBKkwAI
      pUkAhNLkLJBo06QmWIgrSIZAQmkSAKE0CYBQmgRAKE3OAol2y2G1kJnnfaEF0G1AMmlT4gnT
      8NQD1y/0ikkjK9Xc8Lp6qwRAtGcxpGWlYgaorWLfR5m89r89mf9IuGdpWhaNP+9NVecXyhBI
      dBCdgumfksKdZQeoaL43dY9SlQAINXkfpSpDINEx1Fax76O1FIU/zgRvU16mhQtmAY3mAK58
      O+cjn5QAiPYsj0yL9yPudyN9Yh5lxoSGB+T5ngO4yLe7uGOivwRAtGeNJsG/RKNnCUsAhHIa
      P0tYAiA6rEvPAQZ6niX8O89QSa4GFUqT06BCaRIAoTQJgFCaBEAordmzQFe6JlOI1iRngYTS
      ZAgklCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgCh
      NAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE
      0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQ
      SpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEr7f9ku+uSHxmMkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top States and Companies for Data Jobs' width='192'>
      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
      YM5M81vdztj/mfNVfwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top States for Data Jobs' width='192'>
      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
      /wHkY1IGpaMPcgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Visa Class Does Not Have Strong Relationship with Salary ' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Which States can be best for Data Jobs?' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
